{{#paper-autocomplete-dropdown
  horizontalPosition=(readonly horizontalPosition)
  initiallyOpened=(readonly initiallyOpened)
  matchTriggerWidth=(readonly matchTriggerWidth)
  onClose=(action "onClose")
  onOpen=(action "onOpen")
  registerAPI=(action "registerAPI")
  renderInPlace=(readonly renderInPlace)
  triggerComponent='paper-autocomplete-trigger-container'
  contentComponent='paper-autocomplete-content'
  verticalPosition=(readonly verticalPosition)
  disabled=(readonly disabled)
  as |dropdown|}}

  {{#dropdown.trigger
    ariaDescribedBy=(readonly ariaDescribedBy)
    ariaInvalid=(readonly ariaInvalid)
    ariaLabel=(readonly ariaLabel)
    ariaLabelledBy=(readonly ariaLabelledBy)
    ariaRequired=(readonly required)
    class=(readonly concatenatedTriggerClasses)
    onKeydown=(action "onTriggerKeydown")
    onFocus=(action "onTriggerFocus")
    onBlur=(action "deactivate")
    tabindex=(readonly tabindex)
    tagName='md-autocomplete'
    flex=flex
    disabledProxy=disabled
    label=label}}
    {{#component triggerComponent
      allowClear=(readonly allowClear)
      class="layout-row"
      flex=flex
      disabled=disabled
      buildSelection=(readonly buildSelection)
      extra=(readonly extra)
      listboxId=(readonly optionsId)
      onFocus=(action "onFocus")
      activate=(action "activate")
      onBlur=(action "deactivate")
      onInput=(action "onInput")
      placeholder=(readonly placeholder)
      onKeydown=(action "onKeydown")
      searchEnabled=(readonly searchEnabled)
      searchField=(readonly searchField)
      select=(readonly publicAPI)
      selected=(readonly selected)
      selectedItemComponent=(readonly selectedItemComponent)
      as |opt term|}}
      {{yield opt term}}
    {{/component}}

  {{/dropdown.trigger}}
  {{#dropdown.content
    class=(readonly concatenatedDropdownClasses)
    select=(readonly publicAPI)
    to=(readonly destination)
    as |items|}}
   {{!--  {{component beforeOptionsComponent
      extra=(readonly extra)
      listboxId=(readonly optionsId)
      onInput=(action "onInput")
      onKeydown=(action "onKeydown")
      searchEnabled=(readonly searchEnabled)
      onFocus=(action "onFocus")
      onBlur=(action "deactivate")
      searchPlaceholder=(readonly searchPlaceholder)
      select=(readonly publicAPI)}} --}}
    {{#if mustShowSearchMessage}}
      {{component searchMessageComponent
        searchMessage=(readonly searchMessage)
        select=(readonly publicAPI)
      }}
    {{else if mustShowNoMessages}}
      {{#if (hasBlock "inverse")}}
        {{yield to="inverse"}}
      {{else if noMatchesMessage}}
        <ul class="ember-power-select-options md-autocomplete-suggestions" role="listbox">
          <li class="ember-power-select-option ember-power-select-option--no-matches-message" role="option" {{action 'onCreate' publicAPI.searchText}}>
            {{noMatchesMessage}}
          </li>
        </ul>
      {{/if}}
    {{else}}
        {{#component optionsComponent
          class="ember-power-select-options md-autocomplete-suggestions"
          groupIndex=""
          loadingMessage=(readonly loadingMessage)
          id=(readonly optionsId)
          options=items
          optionsComponent=(readonly optionsComponent)
          select=(readonly publicAPI)
          as |option term|}}
          {{yield option term}}
        {{/component}}
{{!--       {{/paper-virtual-repeat}} --}}
    {{/if}}
    {{component afterOptionsComponent select=(readonly publicAPI) extra=(readonly extra)}}
  {{/dropdown.content}}
{{/paper-autocomplete-dropdown}}