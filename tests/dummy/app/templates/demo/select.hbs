{{page-toolbar pageTitle="Select" isDemo=true isWIP=true}}

{{#doc-content}}
<h2>Basic Usage</h2>

<p>Enter an address</p>
<div layout="row">
  {{! BEGIN-SNIPPET select.basic-usage }}
  {{paper-input label="Street Name" value=street onChange=(action (mut street))}}
  {{paper-input label="City" value=city onChange=(action (mut city))}}
  {{#paper-select
    disabled=disableSelect
    label="State"
    searchEnabled=true
    search=(action 'searchtest')
    selected=userState
    onChange=(action (mut userState))
    as |user|
  }} 
    {{user.name}}
  {{/paper-select}}
  {{! END-SNIPPET }}
</div>

<p>
  {{paper-checkbox label="Disable select" value=disableSelect onChange=(action (mut disableSelect))}}
</p>
<h3>Template</h3>
{{code-snippet name="select.basic-usage.hbs"}}

<h2>Option groups</h2>

<p>Pick your pizza below</p>
<div layout="row">
  {{! BEGIN-SNIPPET select.option-groups }}
  {{#paper-select options=sizes label="Size" selected=pizzaSize onChange=(action (mut pizzaSize)) as |size|}}
    {{size}}
  {{/paper-select}}
  {{#paper-select options=groupedToppings label="Topping" selected=topping onChange=(action (mut topping)) as |topping|}}
    {{topping}}
  {{/paper-select}}
  {{! END-SNIPPET }}
</div>

<h3>Template</h3>
{{code-snippet name="select.option-groups.hbs"}}

<h2>Options with async search</h2>

<div layout="column" layout-align="center center">
  <p>Select can call an arbitrary function on show. If this function returns a promise, it will display a loading indicator while it is being resolved:</p>
  <div layout="column" layout-align="center center" style="height: 130px;">
    {{! BEGIN-SNIPPET select.async-search }}
  {{#paper-select
    label="Assign to a user"
    selected=selectedUser
    options=users
    onChange=(action (mut selectedUser))
    as |user|
  }}
    {{user.name}}
  {{/paper-select}}

  {{#if selectedUser}}
    <p>You have selected the user <code>{{selectedUser.name}}</code></p>
  {{/if}}
    {{! END-SNIPPET }}
  </div>
</div>
<h3>Template</h3>
<p>
    We provide two callbacks to the paper-select component <code class="paper">getItems</code> and <code class="paper">itemLabelCallback</code>.
    <code class="paper">getItems</code> returns a promise which resolves to the list of items.
    <code class="paper">itemLabelCallback</code> returns the label for the given item.
</p>
{{code-snippet name="select.async-search.hbs"}}

<h2>Select Search</h2>

<div layout="column" layout-align="center center">
  <div layout="column" layout-align="center center" style="height: 130px;">
    {{! BEGIN-SNIPPET select.select-header }}
  {{#paper-select
    label="Vegetable"
    value=selectedVegetable
    options=vegetables
    searchField="name"
    searchPlaceholder="Search for a vegetable.."
    searchEnabled=true
    closeOnSelect=false
    onChange=(action (mut selectedVegetable))
    as |vegetable|
  }}
    {{#paper-checkbox value=vegetable.checked onChange=(action (mut vegetable.checked))}}
      {{vegetable.name}}
    {{/paper-checkbox}}
  {{/paper-select}}

    {{! END-SNIPPET }}
  </div>
</div>

<h3>Template</h3>

{{code-snippet name="select.select-header.hbs"}}

{{/doc-content}}
